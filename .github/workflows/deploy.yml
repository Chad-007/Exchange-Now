name: CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'candles/**'
      - 'matching-engine/**'
      - 'price-stream/**'
      - 'orders/**'
      - 'services/order-service/**'
      - 'helm/**'
      - 'redis/**'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [candles, matching-engine, price-stream, services/order-service]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Set image name
        id: vars
        run: |
          IMAGE_NAME=$(basename ${{ matrix.service }})
          echo "imagename=$IMAGE_NAME" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/dockerfile    
          push: true
          tags: ${{ secrets.DOCKER_USER }}/${{ steps.vars.outputs.imagename }}:${{ github.sha }}

  update-helm:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        chart: [candles, matching-engine, price-stream, orders, redis]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo apt-get update
          sudo apt-get install -y yq

      - name: Update Helm values.yaml with new image tag
        run: |
          IMAGE_TAG=${{ github.sha }}
          CHART_NAME=${{ matrix.chart }}
          VALUES_FILE="helm/$CHART_NAME/values.yaml"

          if [ -f "$VALUES_FILE" ]; then
            echo "Setting tag to $IMAGE_TAG in $VALUES_FILE"
            yq e -i ".image.tag = \"$IMAGE_TAG\"" "$VALUES_FILE"

            git config user.name "github-actions"
            git config user.email "github-actions@github.com"

            # ensure latest main to avoid parallel push conflicts
            git fetch origin main
            git pull --rebase origin main

            git add "$VALUES_FILE"

            if git diff --cached --quiet; then
              echo "No change in $VALUES_FILE, skipping commit."
            else
              git commit -m "ci: update $CHART_NAME image to $IMAGE_TAG"
              git push
            fi
          else
            echo "No values.yaml for $CHART_NAME, skipping"
          fi
